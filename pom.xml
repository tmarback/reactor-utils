<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dev.sympho</groupId>
    <artifactId>reactor-utils</artifactId>
    <version>0.2.0-SNAPSHOT</version>

    <name>reactor-utils</name>
    <description>Assorted utilities for using Reactor.</description>
    <url>https://reactor-utils.sympho.dev</url>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>tmarback</id>
            <name>Thiago Marback</name>
            <email>tmarback@sympho.dev</email>
            <url>https://www.github.com/tmarback</url>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>America/Los_Angeles</timezone>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/tmarback/reactor-utils.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/tmarback/reactor-utils.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/tmarback/reactor-utils/tree/main</url>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/tmarback/reactor-utils/issues</url>
    </issueManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>17</maven.compiler.release>
        <checker.version>3.32.0</checker.version> <!-- Version of the Checker framework used -->
        <reporter.version>1.1.0</reporter.version> <!-- Version of the tree reporter used -->
    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.9.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>5.1.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-bom</artifactId>
                <version>2022.0.4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.6</version>
        </dependency>

        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <version>${checker.version}</version>
        </dependency>

        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-util</artifactId>
            <version>${checker.version}</version>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core-micrometer</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Testing dependencies -->

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.24.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.4</version>
            <scope>test</scope>
        </dependency>

        <!-- Make the compiler shut up about JSR305 tags -->

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <!-- Plugin versions and global configs -->
        <pluginManagement>
            <plugins>

                <!-- tools -->
                <plugin>
                    <artifactId>maven-help-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>

                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.0.0-M7</version>
                </plugin>
            
                <!-- clean lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                
                <!-- default lifecycle -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>

                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <!-- Without showWarnings and verbose, maven-compiler-plugin may not show output. -->
                        <showWarnings>true</showWarnings>
                        <!-- <verbose>true</verbose> -->
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M9</version>
                </plugin>

                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>

                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.5.0</version>
                    <configuration>
                        <tags>
                            <!-- Enable unofficial specification tags -->
                            <tag>
                                <name>apiNote</name>
                                <placement>a</placement>
                                <head>API Note:</head>
                            </tag>

                            <tag>
                                <name>implSpec</name>
                                <placement>a</placement>
                                <head>Implementation Requirements:</head>
                            </tag>

                            <tag>
                                <name>implNote</name>
                                <placement>a</placement>
                                <head>Implementation Note:</head>
                            </tag>

                        </tags>
                        <links>
                            <link>https://checkerframework.org/api/</link>
                        </links>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M9</version>
                </plugin>

                <plugin>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>

                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>

                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.13</version>
                </plugin>
                
                <!-- site lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.12.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.4.2</version>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>3.0.0-M9</version>
                </plugin>

                <plugin>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                
                <!-- none or multiple lifecycles -->
                <plugin>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.2.1</version>
                    <configuration>
                        <configLocation>checkstyle.xml</configLocation>
                        <cacheFile>${project.build.directory}/checkstyle-cachefile</cacheFile>
                        <headerLocation>LICENSE</headerLocation>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    </configuration>
                    <dependencies>

                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>10.8.0</version>
                        </dependency>

                    </dependencies>
                </plugin>

            </plugins>
        </pluginManagement>
        <plugins>

            <!-- Release management -->
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                </configuration>
            </plugin>

            <!-- Unit tests -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <dependencies>
                
                    <dependency>
                        <groupId>me.fabriciorby</groupId>
                        <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
                        <version>${reporter.version}</version>
                    </dependency>

                </dependencies>
                <configuration>
                    <!-- Tree output for tests -->
                    <reportFormat>plain</reportFormat>
                    <consoleOutputReporter>
                        <disable>true</disable>
                    </consoleOutputReporter>
                    <statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter" />
                </configuration>
            </plugin>
            
            <!-- Integration tests -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <dependencies>

                    <dependency>
                        <groupId>me.fabriciorby</groupId>
                        <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
                        <version>${reporter.version}</version>
                    </dependency>

                </dependencies>
                <configuration>
                    <!-- Tree output for tests -->
                    <reportFormat>plain</reportFormat>
                    <consoleOutputReporter>
                        <disable>true</disable>
                    </consoleOutputReporter>
                    <statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter" />
                </configuration>
                <executions>

                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>

                </executions>
            </plugin>

        </plugins>
    </build>

    <reporting>
        <plugins>
    
            <!-- Test report generation -->
            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <id>unit-tests</id>
                        <reports>
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                    <reportSet>
                        <id>integration-tests</id>
                        <reports>
                            <report>failsafe-report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            
            <!-- Style report generation -->
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            
            <!-- Generate cross-references -->
            <plugin>
                <artifactId>maven-jxr-plugin</artifactId>
            </plugin>

        </plugins>
    </reporting>

    <profiles>
    
        <!-- Deployment profile (required so these plugins are only used when deploying) -->
        <profile>
            <id>deploy</id>
            <build>
                <plugins>
                
                    <!-- Source plugin -->
                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Javadoc plugin -->
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- GPG plugin -->
                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- GPG key used for signing -->
                                    <keyname>04C8F5194A05D29A3BAA8445B73FE37A1ABC3030</keyname>
                                    <!-- Prevent `gpg` from using pinentry programs -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        
        <!-- Deployment to OSSRH -->
        <profile>
            <id>ossrh</id>
            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <name>OSSRH Snapshots</name>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <name>OSSRH Staging</name>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
        
                    <!-- Nexus Staging Plugin -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>
        
        <!-- Deployment to GitHub Packages -->
        <profile>
            <id>github</id>
            <distributionManagement>
                <snapshotRepository>
                    <id>github</id>
                    <name>GitHub Packages</name>
                    <url>https://maven.pkg.github.com/tmarback/reactor-utils</url>
                </snapshotRepository>
                <repository>
                    <id>github</id>
                    <name>GitHub Packages</name>
                    <url>https://maven.pkg.github.com/tmarback/reactor-utils</url>
                </repository>
            </distributionManagement>
        </profile>
        
        <!-- Stricter compiler checking -->
        <profile>
            <id>lint</id>
            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            
                            <!-- Remove compiled classes to ensure recompilation -->
                            <execution>
                                <id>clean-classes</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>

                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>pre-compile</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <showWarnings>false</showWarnings>
                                    <failOnWarning>false</failOnWarning>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-compile</id>
                                <configuration>
                                    <fork>true</fork> <!-- Must fork or else JVM arguments are ignored. -->
                                    <compilerArguments>
                                        <Xmaxerrs>10000</Xmaxerrs>
                                        <Xmaxwarns>10000</Xmaxwarns>
                                    </compilerArguments>
                                    <annotationProcessorPaths>
        
                                        <path>
                                            <groupId>org.checkerframework</groupId>
                                            <artifactId>checker</artifactId>
                                            <version>${checker.version}</version>
                                        </path>
                                        
                                        <!-- Add previously compiled classes for extra checker functionality -->
                                        <path>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                        </path>
        
                                    </annotationProcessorPaths>
                                    <annotationProcessors>
                                        <!-- Enabled checkers -->
                                        <!-- See checker list at https://checkerframework.org/manual -->
                                        <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
                                        <annotationProcessor>org.checkerframework.checker.optional.OptionalChecker</annotationProcessor>
                                        <annotationProcessor>org.checkerframework.checker.interning.InterningChecker</annotationProcessor>
                                        <!-- <annotationProcessor>org.checkerframework.checker.lock.LockChecker</annotationProcessor> --> <!-- Not currently compatible with Streams (https://github.com/typetools/checker-framework/issues/5012) -->
                                        <!-- <annotationProcessor>org.checkerframework.checker.index.IndexChecker</annotationProcessor> --> <!-- Crashes with pattern matching (https://github.com/typetools/checker-framework/issues/5013) -->
                                        <!-- <annotationProcessor>org.checkerframework.checker.fenum.FenumChecker</annotationProcessor> --> <!-- Causes bound issues, not using fenum anyway -->
                                        <annotationProcessor>org.checkerframework.checker.tainting.TaintingChecker</annotationProcessor>
                                        <annotationProcessor>org.checkerframework.checker.regex.RegexChecker</annotationProcessor>
                                        <annotationProcessor>org.checkerframework.checker.formatter.FormatterChecker</annotationProcessor>
                                        <annotationProcessor>org.checkerframework.checker.signedness.SignednessChecker</annotationProcessor>
                                        <annotationProcessor>org.checkerframework.common.initializedfields.InitializedFieldsChecker</annotationProcessor>
                                        <annotationProcessor>org.checkerframework.checker.resourceleak.ResourceLeakChecker</annotationProcessor>
                                    </annotationProcessors>
                                    <compilerArgs>
                                        <arg>-Xlint:all,-processing,-requires-transitive-automatic,-requires-automatic</arg>
                                        <!-- <arg>-AreportEvalWarns</arg> --> <!-- TODO: Too many issues for the time being -->
                                        <!-- <arg>-Astubs=./stubs</arg> --> <!-- Uncomment if using stubs -->
                                        <arg>-AstubWarnIfNotFoundIgnoresClasses</arg>
                                        <!-- I don't need to know what didn't run, spammy -->
                                        <arg>-AsuppressWarnings=type.checking.not.run</arg>
                                        <!-- Say which checker threw the error or warning -->
                                        <arg>-AshowPrefixInWarningMessages</arg>
                                        <!-- Manually open JDK packages until checker supports modules -->
                                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                                        <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                                    </compilerArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        
        <!-- Style checking -->
        <profile>
            <id>style</id>
            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <configuration>
                            <consoleOutput>true</consoleOutput>
                            <linkXRef>false</linkXRef>
                        </configuration>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        
        <!-- Do not allow warnings (compiler or style) -->
        <profile>
            <id>strict</id>
            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <failOnWarning>true</failOnWarning>
                        </configuration>
                    </plugin>

                    <plugin>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <configuration>
                            <violationSeverity>warning</violationSeverity>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>

    </profiles>

</project>
